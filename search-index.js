var searchIndex = JSON.parse('{\
"assembly_simulator":{"doc":"","t":[0,0,0,0,3,5,11,11,11,11,11,11,11,11,11,5,5,11,11,12,12,11,11,11,5,11,11,11,11,12,5,5,5,5,5,5,5,6,6,3,6,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12],"n":["env","execution_impl","settings","types","Env","assembly_script_abort","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","from","get_remaining_points","get_remaining_points_instance","init","init_with_instance","instance","interface","into","new","pointer_metadata","sub_remaining_point","to_owned","try_from","try_into","type_id","wasm_env","assembly_script_call_module","assembly_script_print","call_module","create_instance","exec","run","typed_call","Address","Bytecode","Interface","Ledger","Response","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_module","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","from","from","get_data","get_module","get_random","get_time","init","init","into","into","pointer_metadata","pointer_metadata","remaining_points","ret","set_data","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_module"],"q":["assembly_simulator","","","","assembly_simulator::env","","","","","","","","","","","","","","","","","","","","","","","","","","assembly_simulator::execution_impl","","","","","","","assembly_simulator::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Extends the env of wasmer-as","","","","","if get_string throws an exception abort for some reason is …","","","","","","","","","","","","","","","","","","","","","","","","","Raw call that have the right type signature to be able to …","<code>Print</code> ABI called by the webassembly VM","<code>Call</code> ABI called by the webassembly VM","Create an instance of VM from a module with a given …","","","Utility function to call a WASM module (compiled from …","","","","","That’s what is returned when a module is executed …","","","","","","","Requires a new address that contains the bytecode sended","","","","","","","","","","","","Requires the data at the address","Requires the module in the given address","Requires a random number","Requires a time","","","","","","","number of points that remain after the execution (metering)","returned value from the module call","Requires to replace the data in the current address","","","","","","","","Requires to replace the module at the current address"],"i":[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,3,3,3,3,2,3,2,3,2,3,2,2,3,3,2,3,2,3,2,3,3],"f":[null,null,null,null,null,[[["env",3],["stringptr",6],["stringptr",6],["i32",15],["i32",15]]],[[]],[[]],[[],["env",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4,[["with",3]]]],[[["usize",15]]],[[]],[[["env",3]],["u64",15]],[[["instance",3]],["u64",15]],[[],["usize",15]],[[["instance",3]],["result",6,[["hostenviniterror",4]]]],null,null,[[]],[[["interface",3]],["env",3]],[[]],[[["env",3],["u64",15]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["env",3],["i32",15],["i32",15]],["i32",15]],[[["env",3],["i32",15]]],[[["env",3],["address",6],["str",15]],["response",3]],[[["u64",15],["interface",3]],["result",6,[["instance",3]]]],[[["u64",15],["option",4,[["instance",3]]],["str",15],["interface",3]],["result",6,[["response",3]]]],[[["u64",15],["interface",3]],["result",6,[["u64",15]]]],[[["env",3],["address",6],["str",15],["serialize",8]],["result",6,[["deserializeowned",8]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["interface",3]],[[]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4,[["with",3]]]],[[],["result",4,[["with",3]]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[3,"Env"],[3,"Response"],[3,"Interface"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};